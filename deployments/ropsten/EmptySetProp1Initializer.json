{
  "address": "0x26a954D0Eb10aD349A97f273A4dB020e11FE350f",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "dsuIncentiveId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "essIncentiveId",
          "type": "bytes32"
        }
      ],
      "name": "IncentivesInitialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DSU_USDC_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ESS_WETH_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKER",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Staker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TIMELOCK",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xebbe08bb0909b24e591bc2b1c79d5ff34bc0c9fec31a19d6723289d9b34d48cd",
  "receipt": {
    "to": null,
    "from": "0xad6cCc01f66CAEDB94d1095d41D18E77Ee572bD3",
    "contractAddress": "0x26a954D0Eb10aD349A97f273A4dB020e11FE350f",
    "transactionIndex": 2,
    "gasUsed": "904273",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xfe18a2722d63baaf857ef9f551a61b5559d488c34c8c85ce441e05dfce7fd2be",
    "transactionHash": "0xebbe08bb0909b24e591bc2b1c79d5ff34bc0c9fec31a19d6723289d9b34d48cd",
    "logs": [],
    "blockNumber": 10898568,
    "cumulativeGasUsed": "951386",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0b15d035d2af0d9b6c86f12ed3650c66",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dsuIncentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"essIncentiveId\",\"type\":\"bytes32\"}],\"name\":\"IncentivesInitialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DSU_USDC_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ESS_WETH_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Staker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/emptyset/EmptySetProp1Initializer.sol\":\"EmptySetProp1Initializer\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"contracts/emptyset/EmptySetProp1Initializer.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.6;\\n\\nimport \\\"./interfaces/IUniswapV3Staker.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract EmptySetProp1Initializer {\\n    using SafeERC20 for IERC20;\\n\\n    event IncentivesInitialized(bytes32 dsuIncentiveId, bytes32 essIncentiveId);\\n\\n    IERC20 public constant STAKE = IERC20(0x24aE124c4CC33D6791F8E8B63520ed7107ac8b3e);\\n    address public constant TIMELOCK = address(0x1bba92F379375387bf8F927058da14D47464cB7A);\\n    address public constant RESERVE = address(0xD05aCe63789cCb35B9cE71d01e4d632a0486Da4B);\\n\\n    IUniswapV3Staker public constant STAKER = IUniswapV3Staker(0x1f98407aaB862CdDeF78Ed252D6f557aA5b0f00d);\\n    address public constant DSU_USDC_POOL = address(0x3432ef874A39BB3013e4d574017e0cCC6F937efD);\\n    address public constant ESS_WETH_POOL = address(0xd2Ef54450ec52347bde3dab7B086bf2a005601d8);\\n\\n    function start() external {\\n        require(STAKE.balanceOf(address(this)) == 12_000_000 ether, \\\"Prop1Initializer: incorrect stake\\\");\\n\\n        STAKE.approve(address(STAKER), 12_000_000 ether);\\n\\n        IUniswapV3Staker.IncentiveKey memory dsuIncentiveKey = IUniswapV3Staker.IncentiveKey({\\n            rewardToken: STAKE,\\n            pool: DSU_USDC_POOL,\\n            startTime: block.timestamp,\\n            endTime: block.timestamp + 90 days,\\n            refundee: RESERVE\\n        });\\n\\n        IUniswapV3Staker.IncentiveKey memory essIncentiveKey = IUniswapV3Staker.IncentiveKey({\\n            rewardToken: STAKE,\\n            pool: ESS_WETH_POOL,\\n            startTime: block.timestamp,\\n            endTime: block.timestamp + 90 days,\\n            refundee: RESERVE\\n        });\\n\\n        STAKER.createIncentive(dsuIncentiveKey, 8_000_000 ether);\\n        STAKER.createIncentive(essIncentiveKey, 4_000_000 ether);\\n\\n        require(STAKE.balanceOf(address(this)) == 0, \\\"Prop1Initializer: stake left over\\\");\\n\\n        emit IncentivesInitialized(computeIncentiveId(dsuIncentiveKey), computeIncentiveId(essIncentiveKey));\\n    }\\n\\n    function cancel() external {\\n        require(msg.sender == TIMELOCK, \\\"Prop1Initializer: not timelock\\\");\\n        STAKE.transfer(RESERVE, STAKE.balanceOf(address(this)));\\n    }\\n\\n    function computeIncentiveId(IUniswapV3Staker.IncentiveKey memory key) private pure returns (bytes32) {\\n        return keccak256(abi.encode(key));\\n    }\\n}\\n\",\"keccak256\":\"0x5b8f2d3b9ff244bf3ff6d48ae065f55cf30928c7d855cb4fcda6043f68a53fe5\",\"license\":\"Apache-2.0\"},\"contracts/emptyset/interfaces/IUniswapV3Staker.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IUniswapV3Staker {\\n    struct IncentiveKey {\\n        IERC20 rewardToken;\\n        address pool;\\n        uint256 startTime;\\n        uint256 endTime;\\n        address refundee;\\n    }\\n\\n    function createIncentive(IncentiveKey memory key, uint256 reward) external;\\n}\\n\",\"keccak256\":\"0x0c339658c701c8460ca4f32a5a0f53cf9aff31be7c1fb1f13cacc765c2a37add\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f70806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b0df4cab1161005b578063b0df4cab14610105578063be9a655514610123578063cc7c64111461012d578063ea8a1af01461014b57610088565b8063125fdbbc1461008d57806318983b5d146100ab5780637aadef8b146100c95780639d2cc436146100e7575b600080fd5b610095610155565b6040516100a29190610bd7565b60405180910390f35b6100b361016d565b6040516100c09190610b41565b60405180910390f35b6100d1610185565b6040516100de9190610b41565b60405180910390f35b6100ef61019d565b6040516100fc9190610b41565b60405180910390f35b61010d6101b5565b60405161011a9190610bf2565b60405180910390f35b61012b6101cd565b005b610135610729565b6040516101429190610b41565b60405180910390f35b610153610741565b005b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e81565b73d2ef54450ec52347bde3dab7b086bf2a005601d881565b731bba92f379375387bf8f927058da14d47464cb7a81565b73d05ace63789ccb35b9ce71d01e4d632a0486da4b81565b731f98407aab862cddef78ed252d6f557aa5b0f00d81565b6a09ed194db19b238c0000007324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102269190610b41565b60206040518083038186803b15801561023e57600080fd5b505afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610276919061099e565b146102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad90610c0d565b60405180910390fd5b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3731f98407aab862cddef78ed252d6f557aa5b0f00d6a09ed194db19b238c0000006040518363ffffffff1660e01b8152600401610324929190610b5c565b602060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103769190610971565b5060006040518060a001604052807324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff168152602001733432ef874a39bb3013e4d574017e0ccc6f937efd73ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016276a700426103f99190610ceb565b815260200173d05ace63789ccb35b9ce71d01e4d632a0486da4b73ffffffffffffffffffffffffffffffffffffffff16815250905060006040518060a001604052807324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff16815260200173d2ef54450ec52347bde3dab7b086bf2a005601d873ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016276a700426104b09190610ceb565b815260200173d05ace63789ccb35b9ce71d01e4d632a0486da4b73ffffffffffffffffffffffffffffffffffffffff168152509050731f98407aab862cddef78ed252d6f557aa5b0f00d73ffffffffffffffffffffffffffffffffffffffff16635cc5e3d9836a069e10de76676d080000006040518363ffffffff1660e01b815260040161053f929190610cb1565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b50505050731f98407aab862cddef78ed252d6f557aa5b0f00d73ffffffffffffffffffffffffffffffffffffffff16635cc5e3d9826a034f086f3b33b6840000006040518363ffffffff1660e01b81526004016105cb929190610c88565b600060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b5050505060007324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064c9190610b41565b60206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c919061099e565b146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610c4d565b60405180910390fd5b7f6f45f35304b72fa982ec8eaf953a79b1d80733e701e881526cc0d27b7b21d38d61070683610917565b61070f83610917565b60405161071d929190610bae565b60405180910390a15050565b733432ef874a39bb3013e4d574017e0ccc6f937efd81565b731bba92f379375387bf8f927058da14d47464cb7a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90610c2d565b60405180910390fd5b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73d05ace63789ccb35b9ce71d01e4d632a0486da4b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108559190610b41565b60206040518083038186803b15801561086d57600080fd5b505afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a5919061099e565b6040518363ffffffff1660e01b81526004016108c2929190610b85565b602060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610971565b50565b60008160405160200161092a9190610c6d565b604051602081830303815290604052805190602001209050919050565b60008151905061095681610f0c565b92915050565b60008151905061096b81610f23565b92915050565b60006020828403121561098757610986610e40565b5b600061099584828501610947565b91505092915050565b6000602082840312156109b4576109b3610e40565b5b60006109c28482850161095c565b91505092915050565b6109d481610d41565b82525050565b6109e381610d41565b82525050565b6109f281610d5f565b82525050565b610a0181610d93565b82525050565b610a1081610d93565b82525050565b610a1f81610db7565b82525050565b610a2e81610ddb565b82525050565b610a3d81610ded565b82525050565b610a4c81610dff565b82525050565b6000610a5f602183610cda565b9150610a6a82610e45565b604082019050919050565b6000610a82601e83610cda565b9150610a8d82610e94565b602082019050919050565b6000610aa5602183610cda565b9150610ab082610ebd565b604082019050919050565b60a082016000820151610ad160008501826109f8565b506020820151610ae460208501826109cb565b506040820151610af76040850182610b23565b506060820151610b0a6060850182610b23565b506080820151610b1d60808501826109cb565b50505050565b610b2c81610d89565b82525050565b610b3b81610d89565b82525050565b6000602082019050610b5660008301846109da565b92915050565b6000604082019050610b7160008301856109da565b610b7e6020830184610a25565b9392505050565b6000604082019050610b9a60008301856109da565b610ba76020830184610b32565b9392505050565b6000604082019050610bc360008301856109e9565b610bd060208301846109e9565b9392505050565b6000602082019050610bec6000830184610a07565b92915050565b6000602082019050610c076000830184610a16565b92915050565b60006020820190508181036000830152610c2681610a52565b9050919050565b60006020820190508181036000830152610c4681610a75565b9050919050565b60006020820190508181036000830152610c6681610a98565b9050919050565b600060a082019050610c826000830184610abb565b92915050565b600060c082019050610c9d6000830185610abb565b610caa60a0830184610a34565b9392505050565b600060c082019050610cc66000830185610abb565b610cd360a0830184610a43565b9392505050565b600082825260208201905092915050565b6000610cf682610d89565b9150610d0183610d89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3657610d35610e11565b5b828201905092915050565b6000610d4c82610d69565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d9e82610da5565b9050919050565b6000610db082610d69565b9050919050565b6000610dc282610dc9565b9050919050565b6000610dd482610d69565b9050919050565b6000610de682610d89565b9050919050565b6000610df882610d89565b9050919050565b6000610e0a82610d89565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f50726f7031496e697469616c697a65723a20696e636f7272656374207374616b60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b7f50726f7031496e697469616c697a65723a206e6f742074696d656c6f636b0000600082015250565b7f50726f7031496e697469616c697a65723a207374616b65206c656674206f766560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b610f1581610d53565b8114610f2057600080fd5b50565b610f2c81610d89565b8114610f3757600080fd5b5056fea2646970667358221220dc9cb5aa73781a60d33d609291f4c3522d53d6e623f2284896fb484af5f0700764736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b0df4cab1161005b578063b0df4cab14610105578063be9a655514610123578063cc7c64111461012d578063ea8a1af01461014b57610088565b8063125fdbbc1461008d57806318983b5d146100ab5780637aadef8b146100c95780639d2cc436146100e7575b600080fd5b610095610155565b6040516100a29190610bd7565b60405180910390f35b6100b361016d565b6040516100c09190610b41565b60405180910390f35b6100d1610185565b6040516100de9190610b41565b60405180910390f35b6100ef61019d565b6040516100fc9190610b41565b60405180910390f35b61010d6101b5565b60405161011a9190610bf2565b60405180910390f35b61012b6101cd565b005b610135610729565b6040516101429190610b41565b60405180910390f35b610153610741565b005b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e81565b73d2ef54450ec52347bde3dab7b086bf2a005601d881565b731bba92f379375387bf8f927058da14d47464cb7a81565b73d05ace63789ccb35b9ce71d01e4d632a0486da4b81565b731f98407aab862cddef78ed252d6f557aa5b0f00d81565b6a09ed194db19b238c0000007324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102269190610b41565b60206040518083038186803b15801561023e57600080fd5b505afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610276919061099e565b146102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad90610c0d565b60405180910390fd5b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3731f98407aab862cddef78ed252d6f557aa5b0f00d6a09ed194db19b238c0000006040518363ffffffff1660e01b8152600401610324929190610b5c565b602060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103769190610971565b5060006040518060a001604052807324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff168152602001733432ef874a39bb3013e4d574017e0ccc6f937efd73ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016276a700426103f99190610ceb565b815260200173d05ace63789ccb35b9ce71d01e4d632a0486da4b73ffffffffffffffffffffffffffffffffffffffff16815250905060006040518060a001604052807324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff16815260200173d2ef54450ec52347bde3dab7b086bf2a005601d873ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016276a700426104b09190610ceb565b815260200173d05ace63789ccb35b9ce71d01e4d632a0486da4b73ffffffffffffffffffffffffffffffffffffffff168152509050731f98407aab862cddef78ed252d6f557aa5b0f00d73ffffffffffffffffffffffffffffffffffffffff16635cc5e3d9836a069e10de76676d080000006040518363ffffffff1660e01b815260040161053f929190610cb1565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b50505050731f98407aab862cddef78ed252d6f557aa5b0f00d73ffffffffffffffffffffffffffffffffffffffff16635cc5e3d9826a034f086f3b33b6840000006040518363ffffffff1660e01b81526004016105cb929190610c88565b600060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b5050505060007324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064c9190610b41565b60206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c919061099e565b146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610c4d565b60405180910390fd5b7f6f45f35304b72fa982ec8eaf953a79b1d80733e701e881526cc0d27b7b21d38d61070683610917565b61070f83610917565b60405161071d929190610bae565b60405180910390a15050565b733432ef874a39bb3013e4d574017e0ccc6f937efd81565b731bba92f379375387bf8f927058da14d47464cb7a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90610c2d565b60405180910390fd5b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73d05ace63789ccb35b9ce71d01e4d632a0486da4b7324ae124c4cc33d6791f8e8b63520ed7107ac8b3e73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108559190610b41565b60206040518083038186803b15801561086d57600080fd5b505afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a5919061099e565b6040518363ffffffff1660e01b81526004016108c2929190610b85565b602060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610971565b50565b60008160405160200161092a9190610c6d565b604051602081830303815290604052805190602001209050919050565b60008151905061095681610f0c565b92915050565b60008151905061096b81610f23565b92915050565b60006020828403121561098757610986610e40565b5b600061099584828501610947565b91505092915050565b6000602082840312156109b4576109b3610e40565b5b60006109c28482850161095c565b91505092915050565b6109d481610d41565b82525050565b6109e381610d41565b82525050565b6109f281610d5f565b82525050565b610a0181610d93565b82525050565b610a1081610d93565b82525050565b610a1f81610db7565b82525050565b610a2e81610ddb565b82525050565b610a3d81610ded565b82525050565b610a4c81610dff565b82525050565b6000610a5f602183610cda565b9150610a6a82610e45565b604082019050919050565b6000610a82601e83610cda565b9150610a8d82610e94565b602082019050919050565b6000610aa5602183610cda565b9150610ab082610ebd565b604082019050919050565b60a082016000820151610ad160008501826109f8565b506020820151610ae460208501826109cb565b506040820151610af76040850182610b23565b506060820151610b0a6060850182610b23565b506080820151610b1d60808501826109cb565b50505050565b610b2c81610d89565b82525050565b610b3b81610d89565b82525050565b6000602082019050610b5660008301846109da565b92915050565b6000604082019050610b7160008301856109da565b610b7e6020830184610a25565b9392505050565b6000604082019050610b9a60008301856109da565b610ba76020830184610b32565b9392505050565b6000604082019050610bc360008301856109e9565b610bd060208301846109e9565b9392505050565b6000602082019050610bec6000830184610a07565b92915050565b6000602082019050610c076000830184610a16565b92915050565b60006020820190508181036000830152610c2681610a52565b9050919050565b60006020820190508181036000830152610c4681610a75565b9050919050565b60006020820190508181036000830152610c6681610a98565b9050919050565b600060a082019050610c826000830184610abb565b92915050565b600060c082019050610c9d6000830185610abb565b610caa60a0830184610a34565b9392505050565b600060c082019050610cc66000830185610abb565b610cd360a0830184610a43565b9392505050565b600082825260208201905092915050565b6000610cf682610d89565b9150610d0183610d89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3657610d35610e11565b5b828201905092915050565b6000610d4c82610d69565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d9e82610da5565b9050919050565b6000610db082610d69565b9050919050565b6000610dc282610dc9565b9050919050565b6000610dd482610d69565b9050919050565b6000610de682610d89565b9050919050565b6000610df882610d89565b9050919050565b6000610e0a82610d89565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f50726f7031496e697469616c697a65723a20696e636f7272656374207374616b60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b7f50726f7031496e697469616c697a65723a206e6f742074696d656c6f636b0000600082015250565b7f50726f7031496e697469616c697a65723a207374616b65206c656674206f766560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b610f1581610d53565b8114610f2057600080fd5b50565b610f2c81610d89565b8114610f3757600080fd5b5056fea2646970667358221220dc9cb5aa73781a60d33d609291f4c3522d53d6e623f2284896fb484af5f0700764736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}